

inventory=./inventory_p/aws_ec2.yml


plugin: aws_ec2

#aws_access_key: <YOUR-AWS-ACCESS-KEY-HERE>
#aws_secret_key: <YOUR-AWS-SECRET-KEY-HERE>

regions:
  - us-west-2
  - ap-northeast-1

keyed_groups:
  - key: tags
    prefix: tag
    separator: '_'
hostnames:
  - private-ip-address


            #host['tags'] = boto3_tag_list_to_ansible_dict(host.get('tags', []))
            tempTags = boto3_tag_list_to_ansible_dict(host.get('tags', []))
            host['tags'] = {}
            for k, v in tempTags.items():
                if v and ',' in v:
                    values = map(lambda x: x.strip(), v.split(','))
                    for t in values:
                        if t:
                            host['tags'][k + '_' + t ] = ''
                else:
                    host['tags'][k] = v
                    
                    
            tempTags = boto3_tag_list_to_ansible_dict(host.get('tags', []))
            host['tags'] = {}
            for k, v in tempTags.items():
                if v and ',' in v:
                    values = map(lambda x: x.strip(), v.split(','))
                    for t in values:
                        if t:
                            host['tags'][k + '_' + t ] = ''
                else:
                    host['tags'][k] = v                    



    def _add_host_to_keyed_groups(self, keys, variables, host, strict=False, fetch_hostvars=True):
        if not (keys and isinstance(keys, list)):
            return

        for keyed in keys:
            # Store the initial list of groups
            groups_before = set(self.inventory.groups)

            # Call super only for this keyed item
            super(InventoryModule, self)._add_host_to_keyed_groups(
                [keyed], variables, host, strict, fetch_hostvars)

            # Get the new list of groups
            groups_after = set(self.inventory.groups)

            # Set properties for the created groups only
            for new_group in groups_after - groups_before:
                if new_group.endswith('_'):
                    new_group_trip =  new_group.rstrip('_')
                    self.inventory.add_group(new_group_trip)

